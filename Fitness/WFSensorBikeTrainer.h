//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WFSensor.h"

#import "WFBikeTrainerDelegate.h"

@interface WFSensorBikeTrainer : WFSensor <WFBikeTrainerDelegate>
{
    double _wheelCircumference;
    unsigned short _ergoWatts;
    float _athleteWeigthKG;
    float _windResistance;
    float _windSpeed;
    int _level;
    float _grade;
    float _resistance;
    int _trainerMode;
    id <WFSensorBikeTrainerDelegate> _trainerDelegate;
    int _pendingTrainerMode;
    int _modeRetryCount;
    int _wheelCircumferenceRetries;
    double _rollingResistance;
}

@property(nonatomic) int wheelCircumferenceRetries; // @synthesize wheelCircumferenceRetries=_wheelCircumferenceRetries;
@property(nonatomic) int modeRetryCount; // @synthesize modeRetryCount=_modeRetryCount;
@property(nonatomic) int pendingTrainerMode; // @synthesize pendingTrainerMode=_pendingTrainerMode;
@property(nonatomic) __weak id <WFSensorBikeTrainerDelegate> trainerDelegate; // @synthesize trainerDelegate=_trainerDelegate;
@property(nonatomic) int trainerMode; // @synthesize trainerMode=_trainerMode;
@property(nonatomic) unsigned short ergoWatts; // @synthesize ergoWatts=_ergoWatts;
@property(nonatomic) float resistance; // @synthesize resistance=_resistance;
@property(nonatomic) float grade; // @synthesize grade=_grade;
@property(nonatomic) int level; // @synthesize level=_level;
@property(nonatomic) float windSpeed; // @synthesize windSpeed=_windSpeed;
@property(nonatomic) float windResistance; // @synthesize windResistance=_windResistance;
@property(nonatomic) double rollingResistance; // @synthesize rollingResistance=_rollingResistance;
@property(nonatomic) float athleteWeigthKG; // @synthesize athleteWeigthKG=_athleteWeigthKG;
@property(nonatomic) double wheelCircumference; // @synthesize wheelCircumference=_wheelCircumference;
- (void).cxx_destruct;
- (void)refreshSetpointsToTrainerForMode:(int)arg1;
- (void)changeTrainerMode:(int)arg1;
- (void)setSimulationMode;
- (void)initSpindown;
- (void)setWheelCircumference;
- (void)cpmConnection:(id)arg1 didSetTrainerWheelCircumference:(unsigned char)arg2;
- (void)cpmConnection:(id)arg1 didReceiveCalibrationResponse:(unsigned char)arg2 offset:(unsigned short)arg3 temperature:(BOOL)arg4;
- (void)cpmConnection:(id)arg1 didReceiveTrainerInitSpindownResponse:(unsigned char)arg2;
- (void)cpmConnection:(id)arg1 didReceiveTrainerSpindownResult:(float)arg2 temperature:(float)arg3 offset:(unsigned short)arg4;
- (void)cpmConnection:(id)arg1 didSetTrainerRollingResistance:(unsigned char)arg2;
- (void)cpmConnection:(id)arg1 didSetTrainerWindResistance:(unsigned char)arg2;
- (void)cpmConnection:(id)arg1 didSetTrainerGrade:(unsigned char)arg2;
- (void)cpmConnection:(id)arg1 didSetTrainerMode:(int)arg2 status:(unsigned char)arg3;
- (void)prepareForUserCalibration;
- (void)postConnectSetup;
- (id)bikePowerConnection;
- (id)init;

@end

