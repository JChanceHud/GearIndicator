//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

@class SChartCrosshairStyle, SChartCrosshairTooltip, SChartMappedSeries, ShinobiChart;

@interface SChartCrosshair : UIView
{
    struct CGPoint _crosshairCentre;
    BOOL _inRange;
    BOOL enableCrosshairLinesSet;
    BOOL enableCrosshairLines;
    BOOL interpolatePoints;
    BOOL animationEnabled;
    SChartCrosshairTooltip *tooltip;
    ShinobiChart *chart;
    SChartMappedSeries *trackingSeries;
    SChartCrosshairStyle *style;
    float animationDelay;
    unsigned int animationOptions;
    float animationDuration;
    int mode;
    int outOfRangeBehavior;
    struct SChartPoint trackingPoint;
}

@property(nonatomic) int outOfRangeBehavior; // @synthesize outOfRangeBehavior;
@property(nonatomic) int mode; // @synthesize mode;
@property(nonatomic) BOOL animationEnabled; // @synthesize animationEnabled;
@property(nonatomic) float animationDuration; // @synthesize animationDuration;
@property(nonatomic) unsigned int animationOptions; // @synthesize animationOptions;
@property(nonatomic) float animationDelay; // @synthesize animationDelay;
@property(nonatomic) BOOL interpolatePoints; // @synthesize interpolatePoints;
@property(nonatomic) BOOL enableCrosshairLinesSet; // @synthesize enableCrosshairLinesSet;
@property(retain, nonatomic) SChartCrosshairStyle *style; // @synthesize style;
@property(nonatomic) struct SChartPoint trackingPoint; // @synthesize trackingPoint;
@property(retain, nonatomic) SChartMappedSeries *trackingSeries; // @synthesize trackingSeries;
@property(nonatomic) ShinobiChart *chart; // @synthesize chart;
- (void)chartDidReload;
- (void)crosshairChartGotLongPressAt:(struct CGPoint)arg1;
- (void)crosshairChartGotTapAt:(struct CGPoint)arg1;
- (void)crosshairChartGotPinchAndPan;
- (void)crosshairTrackingFailed;
- (BOOL)crosshairShouldKeepTracking;
- (void)crosshairMovedOutOfRange;
- (void)crosshairMovedInsideRange;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawCrosshairLines;
- (BOOL)shouldDrawCrosshairLinesForPoint:(struct CGPoint)arg1 inFrame:(struct CGRect)arg2;
- (void)moveToFloatingPosition:(struct SChartPoint)arg1 onXAxis:(id)arg2 onYAxis:(id)arg3;
- (void)moveToFloatingPixelPosition:(struct CGPoint)arg1;
- (void)moveToPosition:(struct SChartPoint)arg1 andDisplayDataPoint:(struct SChartPoint)arg2 fromSeries:(id)arg3 andSeriesDataPoint:(id)arg4;
- (void)positionWithBlock:(CDUnknownBlockType)arg1;
- (void)clipTooltip;
@property(retain, nonatomic) SChartCrosshairTooltip *tooltip; // @synthesize tooltip;
@property(nonatomic) BOOL enableCrosshairLines; // @synthesize enableCrosshairLines;
- (BOOL)removeCrosshair;
- (void)showCrosshair;
- (void)setDefaultTooltip;
- (void)dealloc;
- (id)init;
- (id)initWithChart:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 usingChart:(id)arg2;
- (void)setDefaults;

@end

