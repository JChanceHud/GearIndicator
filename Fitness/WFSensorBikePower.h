//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WFSensorBikeTrainer.h"

#import "UIAlertViewDelegate.h"
#import "WFBikePowerDelegate.h"

@class NSManagedObject, WFBikePowerConnection, WFBikePowerData, WFBikePowerRawData, WFCadenceCalculatorWorkout, WFPowerCalculatorWorkout, WFSpeedCalculatorWorkout;

@interface WFSensorBikePower : WFSensorBikeTrainer <WFBikePowerDelegate, UIAlertViewDelegate>
{
    int calibrationOffset;
    BOOL autoCalibrate;
    BOOL bPromptCalibration;
    BOOL bDisplayCalibration;
    BOOL bManualCalibration;
    BOOL _pedalContributionSupported;
    double lastSampleTimestamp;
    BOOL _pedalDifferentiation;
    BOOL _processedFirstSample;
    WFPowerCalculatorWorkout *powerCalculator;
    WFSpeedCalculatorWorkout *speedCalculator;
    WFCadenceCalculatorWorkout *cadenceCalculator;
    id <WFBikeTrainerDelegate> _trainerSubDelegate;
    unsigned long _lastAccumulatedEventCount;
    WFBikePowerData *_lastPowerData;
    NSManagedObject *_lastSampleObject;
    double _accumlatedPowerCalculated;
    double _accumlatedCrankRevsCalculated;
    double _lastAccumlatedTorque;
}

@property(retain, nonatomic) NSManagedObject *lastSampleObject; // @synthesize lastSampleObject=_lastSampleObject;
@property(nonatomic) double lastAccumlatedTorque; // @synthesize lastAccumlatedTorque=_lastAccumlatedTorque;
@property(nonatomic) __weak WFBikePowerData *lastPowerData; // @synthesize lastPowerData=_lastPowerData;
@property(nonatomic) BOOL processedFirstSample; // @synthesize processedFirstSample=_processedFirstSample;
@property(nonatomic) BOOL pedalDifferentiation; // @synthesize pedalDifferentiation=_pedalDifferentiation;
@property(nonatomic) unsigned long lastAccumulatedEventCount; // @synthesize lastAccumulatedEventCount=_lastAccumulatedEventCount;
@property(nonatomic) double accumlatedCrankRevsCalculated; // @synthesize accumlatedCrankRevsCalculated=_accumlatedCrankRevsCalculated;
@property(nonatomic) double accumlatedPowerCalculated; // @synthesize accumlatedPowerCalculated=_accumlatedPowerCalculated;
@property(nonatomic) id <WFBikeTrainerDelegate> trainerSubDelegate; // @synthesize trainerSubDelegate=_trainerSubDelegate;
@property(nonatomic) BOOL pedalContributionSupported; // @synthesize pedalContributionSupported=_pedalContributionSupported;
@property(readonly, nonatomic) WFCadenceCalculatorWorkout *cadenceCalculator; // @synthesize cadenceCalculator;
@property(readonly, nonatomic) WFSpeedCalculatorWorkout *speedCalculator; // @synthesize speedCalculator;
@property(readonly, nonatomic) WFPowerCalculatorWorkout *powerCalculator; // @synthesize powerCalculator;
@property(nonatomic) BOOL autoCalibrate; // @synthesize autoCalibrate;
@property(nonatomic) int calibrationOffset; // @synthesize calibrationOffset;
- (void).cxx_destruct;
- (id)stringFromBikeCadenceAverage:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2 displayCell:(id)arg3;
- (id)formattedBikeCadenceAverage:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2;
- (id)stringFromBikeCadence:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedBikeCadence:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDistance:(int)arg3 displayCell:(id)arg4;
- (id)formattedBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDistance:(int)arg3;
- (id)stringFromBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3 displayCell:(id)arg4;
- (id)formattedBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3;
- (id)stringFromBikeSpeed:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedBikeSpeed:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeDistance:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2 displayCell:(id)arg3;
- (id)formattedBikeDistance:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2;
- (id)stringFromBikePowerCaloriesPrevLap:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikePowerCaloriesLap:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikePowerCalories:(CDStruct_e25eb2d1 *)arg1;
- (id)stringCaloriesFromAvgBikePower:(double)arg1 duration:(double)arg2;
- (id)stringFromBikePower1HourMeanMax;
- (id)stringFromBikePower20MinuteMeanMax;
- (id)stringFromBikePower10MinuteMeanMax;
- (id)stringFromBikePower5MinuteMeanMax;
- (id)stringFromBikePower1MinuteMeanMax;
- (id)stringFromBikePower30SecondMeanMax;
- (id)stringFromBikePower20SecondMeanMax;
- (id)formattedBikePower20SecondMeanMax;
- (id)stringFromBikePower5SecondMeanMax;
- (id)stringFromBikePowerMeanMax:(int)arg1;
- (id)stringFromBikePowerwStressScore;
- (id)stringFromBikePowerwIntensityFactor;
- (id)stringFromBikePowerNormalized;
- (id)formattedBikePowerNormalized;
- (id)stringFromBikePowerMaxPrevLap;
- (id)stringFromBikePowerMaxLap;
- (id)stringFromBikePowerMax;
- (id)stringFromBikePowerAveragePrevLap;
- (id)stringFromBikePowerAverageLap;
- (id)stringFromBikePowerAverage;
- (id)formattedBikePowerAverage;
- (id)stringFromBikePower:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedBikePower:(CDStruct_e25eb2d1 *)arg1;
- (double)bikePowerAverageWorkout;
- (float)bikePowerPedalContribution;
- (void)cpmConnection:(id)arg1 didReceiveKurtSpindownResult:(unsigned long)arg2;
- (void)cpmConnection:(id)arg1 didReceiveKurtSetProFlywheelEnabled:(BOOL)arg2 spindownEnabled:(BOOL)arg3 response:(BOOL)arg4;
- (void)calibrationResponse:(id)arg1;
- (void)setCalibration;
- (void)manualZero;
@property(readonly, nonatomic) WFBikePowerRawData *bikePowerRawData;
@property(readonly, nonatomic) WFBikePowerData *bikePowerData;
@property(readonly, nonatomic) WFBikePowerConnection *bikePowerConnection;
- (void)writeSummaryForWorkout:(id)arg1;
- (void)writeSummaryForSegment:(id)arg1;
- (BOOL)shouldDisplayData:(id *)arg1 displaysWhenStale:(BOOL)arg2;
- (BOOL)resetOffsets;
- (void)resumeWorkout;
- (void)pauseWorkout;
- (void)processData:(id)arg1;
- (void)addSample:(id)arg1 toWorkoutData:(id)arg2;
- (id)powerSampleFromBikeSensor;
- (void)zeroLastPowerSample;
- (id)duplicatedLastSampleByAddingTimeInterval:(double)arg1;
- (void)postConnectSetup;
- (id)requestSensorConnection:(id)arg1;
- (void)endWorkout:(id)arg1;
- (void)endSegment:(id)arg1;
- (BOOL)beginWorkout:(id)arg1;
- (void)beginSegment;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (float)defaultWheelCircumference;
- (void)dealloc;
- (id)init;

@end

