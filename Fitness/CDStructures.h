//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ANTFSClientChannel {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    unsigned char _field3;
    struct DSIResponseQueue<ANTFS_CLIENT_RESPONSE> _field4;
    char _field5;
    unsigned char _field6[41];
    unsigned char _field7[41];
    struct _opaque_pthread_t *_field8;
    struct _opaque_pthread_mutex_t _field9;
    struct _opaque_pthread_mutex_t _field10;
    struct _opaque_pthread_mutex_t _field11;
    struct _opaque_pthread_cond_t _field12;
    struct _opaque_pthread_cond_t _field13;
    struct _opaque_pthread_cond_t _field14;
    struct _opaque_pthread_cond_t _field15;
    struct DSITimer *_field16;
    char _field17;
    char _field18;
    char _field19;
    char _field20;
    char *_field21;
    struct DSIFramerANT *_field22;
    unsigned char _field23;
    unsigned short _field24;
    unsigned char _field25;
    unsigned char _field26;
    unsigned short _field27;
    unsigned char _field28[8];
    unsigned char _field29;
    unsigned char _field30;
    char _field31;
    unsigned int _field32;
    char _field33;
    char _field34;
    char _field35;
    char _field36;
    char _field37;
    CDStruct_b30d3dab _field38;
    unsigned char _field39[255];
    unsigned char _field40[255];
    unsigned char _field41;
    unsigned char _field42;
    unsigned char _field43;
    unsigned char _field44;
    unsigned char _field45[8];
    unsigned short _field46;
    char _field47;
    unsigned int _field48;
    struct {
        char _field1[255];
        char _field2;
        unsigned char _field3;
        unsigned char _field4;
    } _field49;
    unsigned char _field50;
    unsigned char _field51;
    char _field52;
    unsigned char _field53;
    char _field54;
    CDStruct_ed467401 _field55;
    struct {
        unsigned short _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned short _field5;
        char _field6;
    } _field56;
    unsigned char _field57;
    unsigned short _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    unsigned int _field63;
    unsigned short _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
    char *_field68;
    char *_field69;
    int _field70;
    int _field71;
    unsigned char _field72;
};

struct ANTFSHostChannel {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    unsigned char _field3;
    struct DSIResponseQueue<ANTFS_HOST_RESPONSE> _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    unsigned int _field13;
    CDUnknownFunctionPointerType _field14;
    void *_field15;
    unsigned char _field16[41];
    unsigned char _field17[41];
    unsigned char _field18[41];
    unsigned char _field19[255];
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22[255];
    unsigned char _field23;
    unsigned char _field24;
    char *_field25;
    char *_field26;
    char *_field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned char _field31;
    unsigned char _field32;
    unsigned char _field33;
    unsigned char _field34;
    unsigned char _field35;
    CDStruct_6866c7cb _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    unsigned short _field40;
    unsigned char _field41;
    unsigned char _field42;
    char _field43;
    char _field44;
    char _field45;
    unsigned char _field46;
    unsigned char _field47;
    char _field48;
    char _field49;
    char _field50;
    char *_field51;
    char *_field52;
    unsigned char _field53[65551];
    unsigned char _field54[524296];
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    char _field58;
    char _field59;
    char _field60;
    char _field61;
    unsigned int _field62;
    unsigned int _field63;
    char _field64;
    unsigned int _field65;
    struct _opaque_pthread_t *_field66;
    struct _opaque_pthread_mutex_t _field67;
    struct _opaque_pthread_mutex_t _field68;
    struct _opaque_pthread_mutex_t _field69;
    struct _opaque_pthread_cond_t _field70;
    struct _opaque_pthread_cond_t _field71;
    struct _opaque_pthread_cond_t _field72;
    struct _opaque_pthread_cond_t _field73;
    unsigned short _field74;
    char _field75;
    char _field76;
    char _field77;
    char *_field78;
    struct DSIFramerANT *_field79;
    unsigned char _field80;
    unsigned short _field81;
    unsigned char _field82;
    unsigned char _field83;
    unsigned short _field84;
    unsigned char _field85[8];
    unsigned char _field86;
    unsigned short _field87;
    unsigned short _field88;
    unsigned short _field89;
    unsigned char _field90;
    unsigned char _field91;
    unsigned short _field92;
    unsigned int _field93;
    unsigned int _field94;
    unsigned int _field95;
    char _field96;
    unsigned short _field97;
    struct {
        unsigned short _field1;
        unsigned short _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field98[2048];
    char _field99;
    struct DSITimer *_field100;
    unsigned char _field101;
    unsigned char _field102;
    unsigned char _field103;
    unsigned char _field104;
    unsigned char _field105;
    unsigned char _field106;
    unsigned char _field107;
    unsigned char _field108[16];
    struct {
        unsigned short _field1;
        CDStruct_6866c7cb _field2;
        CDStruct_6866c7cb _field3;
    } _field109[512];
    unsigned short _field110;
    int _field111;
    int _field112;
};

struct ANT_MSG_CHANNEL_STATUS {
    struct ANT_MSG_HEADER _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct ANT_MSG_HEADER {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct BCS_MSG_COMMON {
    unsigned char _field1;
    unsigned char _field2[3];
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
};

struct BSS_MSG_COMMON {
    unsigned char _field1;
    unsigned char _field2[3];
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
};

struct CATransform3D {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct DSIANTMessageProcessor {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
};

struct DSIFramerANT;

struct DSIResponseQueue<ANTFS_CLIENT_RESPONSE> {
    struct Item *_field1;
    struct Item *_field2;
};

struct DSIResponseQueue<ANTFS_HOST_RESPONSE> {
    struct Item *_field1;
    struct Item *_field2;
};

struct DSISerial;

struct DSISerialCallback;

struct DSITimer;

struct Drawer {
    _Bool _field1;
    struct shared_ptr<const SChartGL::ErrorHandlerHandle> _field2;
    float _field3;
    int _field4;
    float _field5;
    float _field6;
    _Bool _field7;
    unsigned int _field8;
    struct GLResources *_field9;
    struct VboSet _field10;
    struct VboSet _field11;
    struct VboSet _field12;
    struct VboSet _field13;
    struct VboSet _field14;
    _Bool _field15;
    struct map<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>, SChartGL::Drawer::SeriesHandleCompare, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>>> _field16;
    struct map<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>, SChartGL::Drawer::SeriesHandleCompare, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>>> _field17;
};

struct ErrorHandlerHandle;

struct GLResources;

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct IFTTTTransform3DRotate {
    float angle;
    float x;
    float y;
    float z;
};

struct IFTTTTransform3DScale {
    float sx;
    float sy;
    float sz;
};

struct IFTTTTransform3DTranslate {
    float tx;
    float ty;
    float tz;
};

struct Item;

struct MinMax {
    double min;
    double max;
};

struct PLCrashHostInfoVersion {
    unsigned int major;
    unsigned int minor;
    unsigned int revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PinchRecord {
    double xdistance;
    double ydistance;
    double timestamp;
};

struct SChartGLAnimationManager {
    CDUnknownFunctionPointerType *_field1;
};

struct SChartGLErrorHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct SChartMovementInformation {
    unsigned int :1;
};

struct SChartNumberSkip {
    double _field1;
    double _field2;
};

struct SChartPoint {
    double x;
    double y;
};

struct SChartSeriesDataBinInfo {
    id _field1;
    int _field2;
};

struct SChartSeriesDistanceInfo {
    double _field1;
    id _field2;
    id _field3;
    id _field4;
    struct SChartPoint _field5;
};

struct SChartSize {
    double _field1;
    double _field2;
};

struct TSQueue<char, std::deque<char, std::allocator<char>>> {
    struct _opaque_pthread_cond_t _field1;
    struct _opaque_pthread_mutex_t _field2;
    struct queue<char, std::deque<char, std::allocator<char>>> _field3;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct VboSet {
    struct set<std::__1::shared_ptr<SChartGL::VboData>, SChartGL::VboSet::VboLessThan, std::__1::allocator<std::__1::shared_ptr<SChartGL::VboData>>> _field1;
    int _field2;
    unsigned int _field3;
    struct GLResources *_field4;
    unsigned long long _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct WFANTLibWrapper {
    struct DSISerial *_field1;
    struct DSIFramerANT *_field2;
    struct _opaque_pthread_t *_field3;
    struct _opaque_pthread_cond_t _field4;
    struct _opaque_pthread_mutex_t _field5;
    unsigned char _field6;
    struct DSIANTMessageProcessor *_field7;
    unsigned char _field8;
    CDUnknownFunctionPointerType _field9;
    char *_field10;
    void *_field11;
    struct {
        CDUnknownFunctionPointerType _field1;
        char *_field2;
    } _field12[8];
    char _field13;
    unsigned char _field14;
    unsigned short _field15;
    char _field16;
    struct _opaque_pthread_t *_field17;
};

struct WFSerial {
    CDUnknownFunctionPointerType *_field1;
    struct DSISerialCallback *_field2;
    struct _opaque_pthread_t *_field3;
    struct _opaque_pthread_mutex_t _field4;
    struct _opaque_pthread_cond_t _field5;
    char _field6;
    struct WFSerialShim *_field7;
};

struct WFSerialShim {
    CDUnknownFunctionPointerType *_field1;
    struct TSQueue<char, std::deque<char, std::allocator<char>>> _field2;
};

struct WF_VOLUME_STATE {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    double _field6;
};

struct _Deque_impl {
    char **_field1;
    unsigned int _field2;
    struct _Deque_iterator<char, char &, char *> _field3;
    struct _Deque_iterator<char, char &, char *> _field4;
};

struct _Deque_iterator<char, char &, char *> {
    char *_field1;
    char *_field2;
    char *_field3;
    char **_field4;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned int _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned int _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned int _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_cond_t {
    long _field1;
    char _field2[24];
};

struct _opaque_pthread_mutex_t {
    long _field1;
    char _field2[40];
};

struct _opaque_pthread_t;

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct counted_map<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>> {
    struct __tree<std::__1::pair<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>>, std::__1::__map_value_compare<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>, std::__1::less<SChart::objc_cpp_retain<SChartSkip>>, true>, std::__1::allocator<std::__1::pair<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>>>> {
        struct __tree_node<std::__1::pair<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SChart::objc_cpp_retain<SChartSkip>, SChart::objc_cpp_retain<NSDate>, std::__1::less<SChart::objc_cpp_retain<SChartSkip>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
    unsigned int _max_entries;
};

struct counted_map<double, double> {
    struct __tree<std::__1::pair<double, double>, std::__1::__map_value_compare<double, double, std::__1::less<double>, true>, std::__1::allocator<std::__1::pair<double, double>>> {
        struct __tree_node<std::__1::pair<double, double>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<double, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, double, std::__1::less<double>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
    unsigned int _max_entries;
};

struct counted_map<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>> {
    struct __tree<std::__1::pair<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>>, std::__1::__map_value_compare<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>, std::__1::less<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>>, true>, std::__1::allocator<std::__1::pair<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>>>> {
        struct __tree_node<std::__1::pair<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>, SChart::objc_cpp_retain<NSDate>, std::__1::less<std::__1::pair<SChart::objc_cpp_retain<NSDate>, SChart::objc_cpp_retain<NSDateComponents>>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
    unsigned int _max_entries;
};

struct deque<char, std::allocator<char>> {
    struct _Deque_impl _field1;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct map<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>, SChartGL::Drawer::SeriesHandleCompare, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>>> {
    struct __tree<std::__1::pair<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>, std::__1::__map_value_compare<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>, SChartGL::Drawer::SeriesHandleCompare, true>, std::__1::allocator<std::__1::pair<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>>> {
        struct __tree_node<std::__1::pair<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::shared_ptr<const SChartGL::SeriesHandle>, std::__1::map<SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>, std::__1::less<SChartGL::RenderDataType>, std::__1::allocator<std::__1::pair<const SChartGL::RenderDataType, std::__1::vector<SChartGL::RenderData, std::__1::allocator<SChartGL::RenderData>>>>>, SChartGL::Drawer::SeriesHandleCompare, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[13];
    unsigned int ports[13];
    int behaviors[13];
    int flavors[13];
};

struct queue<char, std::deque<char, std::allocator<char>>> {
    struct deque<char, std::allocator<char>> _field1;
};

struct set<std::__1::shared_ptr<SChartGL::VboData>, SChartGL::VboSet::VboLessThan, std::__1::allocator<std::__1::shared_ptr<SChartGL::VboData>>> {
    struct __tree<std::__1::shared_ptr<SChartGL::VboData>, SChartGL::VboSet::VboLessThan, std::__1::allocator<std::__1::shared_ptr<SChartGL::VboData>>> {
        struct __tree_node<std::__1::shared_ptr<SChartGL::VboData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<SChartGL::VboData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, SChartGL::VboSet::VboLessThan> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<const SChartGL::ErrorHandlerHandle> {
    struct ErrorHandlerHandle *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct timeval {
    int tv_sec;
    int tv_usec;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    float _field2;
    float _field3;
    unsigned char _field4;
    int _field5;
    char _field6;
    unsigned short _field7;
} CDStruct_7219084a;

typedef struct {
    _Bool dataIsValid;
    unsigned short motionCountUpdateTime1024;
    unsigned short motionCount;
    unsigned int ma_x;
    unsigned int ma_y;
    unsigned int ma_z;
    _Bool tapCountIncluded;
    unsigned char tapCount;
    _Bool gctIncluded;
    unsigned short gct;
    _Bool verticalOscIncluded;
    unsigned short verticalOsc;
} CDStruct_66c1ce64;

typedef struct {
    unsigned char messageSize;
    unsigned char messageId;
    unsigned char data1;
    unsigned char data2;
    unsigned char data3;
    unsigned char data4;
    unsigned char data5;
    unsigned char data6;
    unsigned char data7;
    unsigned char data8;
    unsigned char data9;
    unsigned char data10;
    unsigned char data11;
    unsigned char data12;
    unsigned char data13;
    unsigned char data14;
} CDStruct_a495ba5a;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned int _field9;
    unsigned int _field10;
} CDStruct_0ba1fc72;

typedef struct {
    unsigned char ucCadence;
    unsigned char ucNegVertDist;
    unsigned char ucPosVertDist;
    unsigned char ucEquipmentState;
} CDStruct_76192fe6;

typedef struct {
    unsigned char ucEquipmentType;
    unsigned char ucElapsedTime;
    unsigned char ucDistance;
    unsigned short usSpeed;
    unsigned char ucHeartrate;
    unsigned char ucEquipmentState;
    unsigned char ucLapNumber;
} CDStruct_8d425937;

typedef struct {
    unsigned char ucDeviceType;
    unsigned char ucSearchTimeout;
    unsigned char ucChannelType;
    unsigned short usChannelPeriod;
    unsigned char ucNetworkNumber;
    unsigned char ucChannelFrequency;
    double searchTime;
} CDStruct_36dd6e09;

typedef struct {
    unsigned char ucPosVertDist;
    unsigned char ucStrides;
    unsigned char ucCadence;
    unsigned short usInstPower;
    unsigned char ucEquipmentState;
} CDStruct_2b514053;

typedef struct {
    unsigned char ucHwVersion;
    unsigned char ucSwVersion;
    unsigned char ucModelNumber;
} CDStruct_ed467401;

typedef struct {
    unsigned char ucStrokeCount;
    unsigned char ucCadence;
    unsigned short usInstPower;
    unsigned char ucEquipmentState;
} CDStruct_ae17e73e;

typedef struct {
    unsigned char ucBatteryState;
    unsigned char ucAssistPercent;
} CDStruct_5d1e92a1;

typedef struct {
    unsigned char ucManId;
    unsigned int ulSerialNumber;
} CDStruct_f55e8c9b;

typedef struct {
    unsigned int timestamp;
    unsigned int total_timer_time;
    unsigned int local_timestamp;
    unsigned short num_sessions;
    unsigned char type;
    unsigned char event;
    unsigned char event_type;
    unsigned char event_group;
} CDStruct_491b7bdc;

typedef struct {
    unsigned int timestamp;
    unsigned int serial_number;
    unsigned int cum_operating_time;
    unsigned short manufacturer;
    unsigned short product;
    unsigned short software_version;
    unsigned short battery_voltage;
    unsigned char device_index;
    unsigned char device_type;
    unsigned char hardware_version;
    unsigned char battery_status;
} CDStruct_98804d23;

typedef struct {
    unsigned int ulAccumPeriod;
    unsigned int ulAccumTorque;
    unsigned int ulAccumTicks;
} CDStruct_cda717bc;

typedef struct {
    unsigned int timestamp;
    unsigned int data;
    unsigned short data16;
    unsigned char event;
    unsigned char event_type;
    unsigned char event_group;
} CDStruct_7407c9fa;

typedef struct {
    unsigned int serial_number;
    unsigned int time_created;
    unsigned short manufacturer;
    unsigned short product;
    unsigned short number;
    unsigned char type;
} CDStruct_6fa72116;

typedef struct {
    unsigned int timestamp;
    unsigned int start_time;
    int start_position_lat;
    int start_position_long;
    unsigned int total_elapsed_time;
    unsigned int total_timer_time;
    unsigned int total_distance;
    unsigned int total_cycles;
    int nec_lat;
    int nec_long;
    int swc_lat;
    int swc_long;
    unsigned int avg_stroke_count;
    unsigned int total_work;
    unsigned short message_index;
    unsigned short total_calories;
    unsigned short total_fat_calories;
    unsigned short avg_speed;
    unsigned short max_speed;
    unsigned short avg_power;
    unsigned short max_power;
    unsigned short total_ascent;
    unsigned short total_descent;
    unsigned short first_lap_index;
    unsigned short num_laps;
    unsigned short normalized_power;
    unsigned short training_stress_score;
    unsigned short intensity_factor;
    unsigned short left_right_balance;
    unsigned short avg_stroke_distance;
    unsigned short pool_length;
    unsigned short num_active_lengths;
    unsigned char event;
    unsigned char event_type;
    unsigned char sport;
    unsigned char sub_sport;
    unsigned char avg_heart_rate;
    unsigned char max_heart_rate;
    unsigned char avg_cadence;
    unsigned char max_cadence;
    unsigned char total_training_effect;
    unsigned char event_group;
    unsigned char trigger;
    unsigned char swim_stroke;
    unsigned char pool_length_unit;
    unsigned char min_heart_rate;
} CDStruct_6e3ce741;

typedef struct {
    unsigned int timestamp;
    unsigned int start_time;
    int start_position_lat;
    int start_position_long;
    int end_position_lat;
    int end_position_long;
    unsigned int total_elapsed_time;
    unsigned int total_timer_time;
    unsigned int total_distance;
    unsigned int total_cycles;
    unsigned int total_work;
    unsigned short message_index;
    unsigned short total_calories;
    unsigned short total_fat_calories;
    unsigned short avg_speed;
    unsigned short max_speed;
    unsigned short avg_power;
    unsigned short max_power;
    unsigned short total_ascent;
    unsigned short total_descent;
    unsigned short num_lengths;
    unsigned short normalized_power;
    unsigned short left_right_balance;
    unsigned short first_length_index;
    unsigned short avg_stroke_distance;
    unsigned short num_active_lengths;
    unsigned char event;
    unsigned char event_type;
    unsigned char avg_heart_rate;
    unsigned char max_heart_rate;
    unsigned char avg_cadence;
    unsigned char max_cadence;
    unsigned char intensity;
    unsigned char lap_trigger;
    unsigned char sport;
    unsigned char event_group;
    unsigned char swim_stroke;
    unsigned char sub_sport;
    unsigned char min_heart_rate;
} CDStruct_e51a0dd7;

typedef struct {
    unsigned int ulDeviceID;
    unsigned short usManufacturerID;
    unsigned short usDeviceType;
    unsigned char ucAuthenticationType;
    unsigned char ucStatusByte1;
    unsigned char ucStatusByte2;
    unsigned int ulClientSerialNumber;
} CDStruct_d6a95b3a;

typedef struct {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
} CDStruct_6866c7cb;

typedef struct {
    unsigned int ulSerialNumber;
    unsigned short usBeaconDeviceType;
    unsigned short usBeaconDeviceManufID;
    unsigned char ucBeaconFrequency;
    unsigned char ucLinkPeriod;
    char bPairingEnabled;
    char bUploadEnabled;
    char bDataAvailable;
    unsigned char ucAuthType;
    unsigned char ucBeaconTimeout;
    unsigned char ucPairingTimeout;
} CDStruct_b30d3dab;

typedef struct {
    unsigned int ulDeviceID;
    unsigned short usManufacturerID;
    unsigned short usDeviceType;
    unsigned char ucTransType;
    unsigned short usMsgPeriod;
    unsigned char ucLinkFrequency;
    unsigned char ucSearchFrequency;
    unsigned char aucNetworkKey[8];
    int eANTFSDeviceType;
} CDStruct_f17dbfdc;

typedef struct {
    unsigned int timestamp;
    unsigned short systolic_pressure;
    unsigned short diastolic_pressure;
    unsigned short mean_arterial_pressure;
    unsigned short map_3_sample_mean;
    unsigned short map_morning_values;
    unsigned short map_evening_values;
    unsigned short user_profile_index;
    unsigned char heart_rate;
    unsigned char heart_rate_type;
    unsigned char status;
} CDStruct_0ea0e030;

typedef struct {
    unsigned int timestamp;
    unsigned short weight;
    unsigned short percent_fat;
    unsigned short percent_hydration;
    unsigned short visceral_fat_mass;
    unsigned short bone_mass;
    unsigned short muscle_mass;
    unsigned short basal_met;
    unsigned short active_met;
    unsigned short user_profile_index;
    unsigned char physique_rating;
    unsigned char metabolic_age;
    unsigned char visceral_fat_rating;
} CDStruct_3400c947;

typedef struct {
    unsigned int capabilities;
    char wkt_name[16];
    unsigned short num_valid_steps;
    unsigned char sport;
} CDStruct_9265d261;

typedef struct {
    unsigned int accumWheelRevolutions;
    float accumSpeedTime;
    unsigned short instantWheelRPM;
    unsigned int accumCrankRevolutions;
    float accumCadenceTime;
    unsigned char instantCrankRPM;
    unsigned int accumPower;
} CDStruct_2929c278;

typedef struct {
    unsigned int timestamp;
    int position_lat;
    int position_long;
    unsigned int distance;
    int time_from_course;
    unsigned int total_cycles;
    unsigned int accumulated_power;
    unsigned short altitude;
    unsigned short speed;
    unsigned short power;
    short grade;
    unsigned short compressed_accumulated_power;
    unsigned char heart_rate;
    unsigned char cadence;
    unsigned char compressed_speed_distance[3];
    unsigned char resistance;
    unsigned char cycle_length;
    char temperature;
    unsigned char speed_1s[5];
    unsigned char cycles;
    unsigned char left_right_balance;
} CDStruct_f589045f;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    unsigned short userProfileId;
    unsigned char gender;
    unsigned char age;
    unsigned char height;
    char athelete;
    unsigned char activityLevel;
} CDStruct_5eba643d;

typedef struct {
    unsigned short _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned int _field7;
    unsigned int _field8;
} CDStruct_ffca6faa;

typedef struct {
    unsigned short usProductId;
    unsigned char ucVendorId;
    unsigned char ucHardwareVersion;
    unsigned short usModelNumber;
    unsigned short usDeviceCapabilities;
    unsigned int ulBootloaderVersion;
    unsigned char ucWahooBluePlatform;
} CDStruct_e7e103e4;

typedef struct {
    unsigned short hardwareVersion;
    unsigned short bootLoaderVersion;
    unsigned char firmwareVersionMajor;
    unsigned char firmwareVersionMinor;
    unsigned char firmwareVersionRevision;
    char runningHighMem;
} CDStruct_5b38a99e;

typedef struct {
    unsigned short message_index;
    unsigned short hrm_ant_id;
    unsigned char enabled;
    unsigned char log_hrv;
    unsigned char hrm_ant_id_trans_type;
} CDStruct_73a6fa93;

typedef struct {
    unsigned short usSequence;
    int carbohydrateId;
    float carbohydrate;
    int mealInfo;
    int testerInfo;
    int healthInfo;
    unsigned short usExerciseDuration;
    unsigned char ucExerciseIntensity;
    int medicationId;
    float medication;
    int medicationUnits;
    float hbA1c;
} CDStruct_a8fa8539;

typedef struct {
    unsigned short _field1;
    int _field2;
    int _field3;
    unsigned char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
} CDStruct_5801dada;

typedef struct {
    char friendly_name[16];
    unsigned short message_index;
    unsigned short weight;
    unsigned short local_id;
    unsigned char gender;
    unsigned char age;
    unsigned char height;
    unsigned char language;
    unsigned char elev_setting;
    unsigned char weight_setting;
    unsigned char resting_heart_rate;
    unsigned char default_max_running_heart_rate;
    unsigned char default_max_biking_heart_rate;
    unsigned char default_max_heart_rate;
    unsigned char hr_setting;
    unsigned char speed_setting;
    unsigned char dist_setting;
    unsigned char power_setting;
    unsigned char activity_class;
    unsigned char position_setting;
    unsigned char temperature_setting;
    unsigned char global_id[6];
} CDStruct_9006d996;

typedef struct {
    float *_field1;
    float *_field2;
    float *_field3;
    id *_field4;
    int _field5;
} CDStruct_4383f448;

typedef struct {
    char bLowBatteryDetect;
    char bSensorMalfunctionDetect;
    char bSampleSize;
    char bStripInsertErrorDetect;
    char bStripTypeErrorDetect;
    char bResultHighLowDetect;
    char bTempHighLowDetect;
    char bReadInterruptDetect;
    char bGeneralDeviceFault;
    char bTimeFault;
    char bMultipleBond;
} CDStruct_a7624fdb;

typedef struct {
    char bInstStrideLengthMeasurementSupported;
    char bTotalDistanceMeasurementSupported;
    char bWalkingOrRunningSupported;
    char bCalibrationSupported;
    char bMultipleSensorLocationsSupported;
} CDStruct_885d282a;

typedef struct {
    char bBodyMovementDetected;
    char bCuffTooLoose;
    char bIrregularPulseDetected;
    int pulseRange;
    char bImproperPosition;
} CDStruct_0a1bb1e7;

typedef struct {
    char _field1;
    char _field2;
    char _field3;
    int _field4;
    float _field5;
} CDStruct_ab94678c;

typedef struct {
    char bSpeedMeasurementSupported;
    char bCadenceMeasurementSupported;
    char bMultipleSensorLocationsSupported;
} CDStruct_427bdbf8;

typedef struct {
    char bMetricUnits;
} CDStruct_e25eb2d1;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double totalDescent;
    double totalAscent;
    double distanceOffset;
} CDStruct_99f07a23;

typedef struct {
    double timeOffset;
    long groundContactTimeOffset;
    long verticalOscillationOffset;
    long motionPowerXOffset;
    long motionPowerYOffset;
    long motionPowerZOffset;
    long smoothnessOffset;
} CDStruct_1a8f881b;

typedef struct {
    double timeOffset;
    long temperatureOffset;
} CDStruct_dcd457db;

typedef struct {
    float fpLastTime;
    unsigned short usInstRPM;
    double lastDataTime;
    double lastMessageTime;
} CDStruct_0a917bb2;

typedef struct {
    float fpLastTime;
    unsigned short usInstRPM;
    double lastDataTime;
} CDStruct_c75e22b1;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    int _field7;
} CDStruct_f4566b97;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
} CDStruct_265c7ca9;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    int _field1;
    unsigned short _field2;
    id _field3;
} CDStruct_391ccd70;

typedef struct {
    int version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_304912e7;

typedef struct {
    int _field1;
    int _field2;
    unsigned char _field3;
    id _field4;
} CDStruct_1fd10fe0;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
} CDStruct_9d955b4a;

typedef struct {
    int batteryPresent;
    int batteryDischarging;
    int batteryCharging;
    int batteryCritical;
} CDStruct_d6a5fd51;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long i64StrideOffset;
    float fpDistanceOffset;
    double timeOffset;
} CDStruct_1b6548d8;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long wheelRevOffset;
    long long crankRevOffset;
    double speedTimeOffset;
    double cadenceTimeOffset;
} CDStruct_a8d6e61d;

typedef struct {
    long long crankRevolutionsOffset;
    long long wheelRevolutionsOffset;
    float calculatedCrankRevsOffset;
    float accumulatedTorqueOffset;
    double timeOffset;
} CDStruct_4dc97ad8;

typedef struct {
    short x_axis;
    short y_axis;
    short z_axis;
} CDStruct_10f6bed7;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    struct *_field5;
    char *_field6;
} CDStruct_9deb6d1c;

typedef struct {
    unsigned char _field1;
    char _field2;
    unsigned char _field3;
    char _field4;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field5;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field6;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field7;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field8;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field9;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field10;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field11;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned short _field3;
        unsigned short _field4;
    } _field12;
} CDStruct_b27c2a5a;

typedef struct {
    double max;
    double min;
    double current;
    double avgMin;
    double avgMax;
    double avgCurrent;
    CDStruct_bfb828a9 maxRange;
    CDStruct_bfb828a9 minRange;
    CDStruct_bfb828a9 currentRange;
    CDStruct_bfb828a9 avgMaxRange;
    CDStruct_bfb828a9 avgMinRange;
    CDStruct_bfb828a9 avgCurrentRange;
} CDStruct_f44089e8;

typedef struct {
    unsigned short usSequence;
    double baseTime;
    short ssTimeOffset;
    float concentration;
    int sampleType;
    int sampleLocation;
    union {
        unsigned short usStatus;
        struct {
            unsigned int bBatteryLow:1;
            unsigned int bSensorMalfunction:1;
            unsigned int bSampleSizeInsufficient:1;
            unsigned int bStripInsertionError:1;
            unsigned int bStripTypeIncorrect:1;
            unsigned int bResultTooHigh:1;
            unsigned int bResultTooLow:1;
            unsigned int bTemperatureTooHigh:1;
            unsigned int bTemperatureTooLow:1;
            unsigned int bReadInterrupted:1;
            unsigned int bGeneralDeviceFault:1;
            unsigned int bTimeFault:1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
        } ;
    } sensorStatus;
} CDStruct_2f8f66fd;

// Ambiguous groups
typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
} CDStruct_a17356f7;

typedef struct {
    unsigned char calibrationId;
    unsigned char reserved1;
    unsigned char reserved2;
    unsigned char reserved3;
    unsigned char reserved4;
    unsigned char reserved5;
    unsigned char reserved6;
} CDStruct_ead935ea;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
} CDStruct_bf4149f7;

typedef struct {
    unsigned int crankRevOffset;
    double timeOffset;
} CDStruct_170271e9;

typedef struct {
    unsigned int heartbeatOffset;
    double timeOffset;
} CDStruct_4b6a4f4b;

typedef struct {
    unsigned int _field1;
} CDStruct_6238c8e0;

typedef struct {
    unsigned int ulOperatingTime;
} CDStruct_60527eeb;

typedef struct {
    unsigned short usAccumPeriod;
    unsigned short usAccumTorque;
    unsigned char ucAccumTicks;
} CDStruct_209a021f;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
} CDStruct_8abe0896;

typedef struct {
    unsigned short usLastCadence1024;
    unsigned short usCumCadenceRevCount;
    unsigned short usLastTime1024;
    unsigned short usCumSpeedRevCount;
} CDStruct_340e9e35;

typedef struct {
    unsigned short usLastCadence1024;
    unsigned short usCumCadenceRevCount;
} CDStruct_4945f4df;

typedef struct {
    unsigned short usLastTime1024;
    unsigned short usCumSpeedRevCount;
} CDStruct_6587c88b;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double oldest;
    double newest;
} CDStruct_bfb828a9;

typedef struct {
    long long crankRevOffset;
    double cadenceTimeOffset;
} CDStruct_d6e89c6f;

typedef struct {
    long long wheelRevOffset;
    double speedTimeOffset;
} CDStruct_b48bc849;

typedef struct {
    long long wheelRevOffset;
    double timeOffset;
} CDStruct_60d32b21;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    struct {
        double x;
        double y;
    } origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

#pragma mark Typedef'd Unions

typedef union {
    unsigned char ucStatus;
    struct {
        unsigned int bHighAlert:1;
        unsigned int bLowAlert:1;
        unsigned int bBelow55:1;
        unsigned int bRisingAlert:1;
        unsigned int bFallingAlert:1;
        unsigned int bRequestFurtherError:1;
        unsigned int bRequestFurtherStatus:1;
        unsigned int :1;
    } ;
} CDUnion_76eb878e;

