//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WFGenericDevice.h"

#import "CBPeripheralDelegate.h"
#import "WFBTLEServiceDelegate.h"

@class CBPeripheral, NSMutableDictionary, NSString, WFBTLEBatteryService, WFBTLEDeviceInfoService, WFBTLEFirmwareUpdateService, WFBTLEServiceProcessor;

@interface WFBTLEDevice : WFGenericDevice <CBPeripheralDelegate, WFBTLEServiceDelegate>
{
    CBPeripheral *btlePeripheral;
    id <WFBTLEDeviceDelegate> deviceDelegate;
    NSMutableDictionary *serviceProcessors;
    WFBTLEDeviceInfoService *deviceInfoService;
    WFBTLEBatteryService *batteryService;
    WFBTLEFirmwareUpdateService *firmwareUpdateService;
    WFBTLEServiceProcessor *primaryDataService;
    NSString *deviceName;
    unsigned short usAppearance;
    BOOL receivedFirstCharacteristicUpdate;
    BOOL deviceConnectionProcessComplete;
    BOOL firmwareUpdateCheckComplete;
}

+ (id)UUIDForBTLEDeviceWithPeripheral:(id)arg1;
+ (id)serviceUUIDInfoForSensorType:(int)arg1;
+ (int)sensorTypesFromServiceUUIDs:(id)arg1;
+ (id)retrieveService:(unsigned short)arg1 fromServices:(id)arg2;
+ (id)retrieveCharacteristic:(unsigned short)arg1 fromCharacteristics:(id)arg2;
+ (BOOL)doesDeviceName:(id)arg1 matcheSensorSubType:(int)arg2;
+ (id)deviceNamesFromSubType:(int)arg1;
+ (int)sensorSubTypeFromDeviceName:(id)arg1;
+ (id)allServiceUUIDInfoForSensorType:(int)arg1;
+ (id)advertisedUUIDInfoForSensorType:(int)arg1;
+ (id)sensorForSensorType:(int)arg1 peripheral:(id)arg2 deviceDelegate:(id)arg3;
@property(nonatomic) BOOL firmwareUpdateCheckComplete; // @synthesize firmwareUpdateCheckComplete;
@property(nonatomic) BOOL deviceConnectionProcessComplete; // @synthesize deviceConnectionProcessComplete;
@property(retain, nonatomic) id <WFBTLEDeviceDelegate> deviceDelegate; // @synthesize deviceDelegate;
@property(readonly, nonatomic) CBPeripheral *btlePeripheral; // @synthesize btlePeripheral;
- (id)getMinimumFirmwareVersion;
- (void)prepareForDelete;
- (BOOL)startUpdatingForService:(id)arg1;
- (id)serviceProcessorForServiceUUID:(id)arg1;
- (void)reset;
- (void)configurePeripheral:(id)arg1;
- (void)checkDeviceConnectionProcessState;
- (void)checkFirmwareUpdateStatus;
- (id)serviceProcessorForService:(id)arg1;
- (BOOL)hasData;
- (void)clearCharacteristicProcessors;
- (id)addServiceProcessorForServiceUUID:(id)arg1;
@property(readonly, nonatomic) float signalEfficiency;
@property(readonly, nonatomic) CDStruct_e7e103e4 *pstDeviceInfo;
@property(readonly, nonatomic) BOOL isFirmwareRevisionAvailable;
@property(readonly, nonatomic) BOOL isFirmwareCharacteristicAvailable;
- (int)sensorSubType;
- (id)getRawData;
- (id)getData;
- (double)lastMessageTime;
- (id)btleServiceWantsSerialNumber:(id)arg1;
- (id)btleServiceWantsFirmwareRevision:(id)arg1;
- (id)btleServiceWantsDeviceName:(id)arg1;
- (void)btleService:(id)arg1 requestsCommonDataConfiguration:(id)arg2;
- (void)btleService:(id)arg1 didReceiveDeviceInfoResponse:(BOOL)arg2;
- (void)btleService:(id)arg1 didReceiveFirmwareRevision:(id)arg2;
- (void)btleService:(id)arg1 didReceiveConnectionRefusedEvent:(id)arg2;
- (void)peripheralConnectionInterrupted;
- (void)peripheral:(id)arg1 didWriteValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverDescriptorsForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverIncludedServicesForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)peripheralDidUpdateRSSI:(id)arg1 error:(id)arg2;
- (void)peripheral:(id)arg1 didModifyServices:(id)arg2;
- (void)peripheralDidUpdateName:(id)arg1;
- (id)initWithSensorType:(int)arg1 subType:(int)arg2;
- (id)init;
- (void)dealloc;

@end

