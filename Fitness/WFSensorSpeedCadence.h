//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WFSensor.h"

@class WFBikeSpeedCadenceConnection, WFBikeSpeedCadenceData, WFDataSet, WFSlidingSet;

@interface WFSensorSpeedCadence : WFSensor
{
    float wheelCircumference;
    CDStruct_0a917bb2 prevWheelData;
    CDStruct_0a917bb2 prevCrankData;
    CDStruct_a8d6e61d currentOffsets;
    CDStruct_a8d6e61d lapOffsets;
    CDStruct_a8d6e61d prevLapOffsets;
    CDStruct_a8d6e61d workoutOffsets;
    CDStruct_a8d6e61d pauseOffsets;
    CDStruct_a8d6e61d dataOffsets;
    CDStruct_a8d6e61d zeroOffsets;
    WFDataSet *lapAverageSpeed;
    WFDataSet *prevLapAverageSpeed;
    WFDataSet *workoutAverageSpeed;
    WFDataSet *lapAverageCadence;
    WFDataSet *prevLapAverageCadence;
    WFDataSet *workoutAverageCadence;
    WFSlidingSet *timeDistanceCalculator;
    WFSlidingSet *cadenceTimeCalculator;
}

@property(nonatomic) float wheelCircumference; // @synthesize wheelCircumference;
- (void).cxx_destruct;
- (id)stringFromBikeSpeedCalories:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeCadenceAverage:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2 displayCell:(id)arg3;
- (id)formattedBikeCadenceAverage:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2;
- (id)stringFromBikeCadence:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedBikeCadence:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDistance:(int)arg3 displayCell:(id)arg4;
- (id)formattedBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDistance:(int)arg3;
- (id)stringFromBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3 displayCell:(id)arg4;
- (id)formattedBikeSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3;
- (id)stringFromBikeSpeed:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedBikeSpeed:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeDistance:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2 displayCell:(id)arg3;
- (id)formattedBikeDistance:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2;
- (void)createCadenceTimeCalculator;
- (void)createTimeDistanceCalculator:(BOOL)arg1;
@property(readonly, nonatomic) WFBikeSpeedCadenceData *bikeSpeedCadenceData;
@property(readonly, nonatomic) WFBikeSpeedCadenceConnection *bikeSpeedCadenceConnection;
- (void)writeSummaryForWorkout:(id)arg1;
- (void)writeSummaryForSegment:(id)arg1;
- (BOOL)shouldDisplayData:(id *)arg1 displaysWhenStale:(BOOL)arg2;
- (void)zeroOffsets;
- (void)resetCrankOffsets;
- (void)resetWheelOffsets;
- (BOOL)resetOffsets;
- (void)resumeWorkout;
- (void)pauseWorkout;
- (void)processData:(id)arg1;
- (void)postConnectSetup;
- (void)endWorkout:(id)arg1;
- (void)endSegment:(id)arg1;
- (BOOL)beginWorkout:(id)arg1;
- (void)beginSegment;
- (id)init;

@end

