//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "WFDebugDelegate.h"
#import "WFSensorConnectionDelegate.h"
#import "WFSensorSubConnectionDelegate.h"
#import "WFWBFirmwareDelegate.h"

@class NSArray, NSMutableArray, NSOperationQueue, NSString, WFSensorConnection, WFWBFirmwareVersionDescriptor;

@interface _WFSensorConnection : NSObject <WFSensorConnectionDelegate, WFSensorSubConnectionDelegate, WFDebugDelegate, WFWBFirmwareDelegate>
{
    int sensorType;
    int sensorSubType;
    id <_WFSensorConnectionDelegate> internalDelegate;
    id <WFSensorSubConnectionDelegate> parentDelegate;
    id <WFDebugDelegate> debugDelegate;
    id <WFWBFirmwareDelegate> wbFirmwareDelegate;
    unsigned char channelNumber;
    BOOL isValid;
    BOOL didTimeout;
    unsigned char transmissionType;
    unsigned short deviceNumber;
    NSString *deviceUUIDString;
    int connectionStatus;
    int networkType;
    int error;
    WFSensorConnection *childConnection;
    BOOL hadChildConnection;
    NSOperationQueue *_dataOperationQueue;
    NSArray *_availableFirmwareVersions;
    NSString *_availableFirmwareVersionString;
    WFWBFirmwareVersionDescriptor *_availableFirmwareVersionDescriptor;
    NSString *_betaFirmwareVersionString;
    WFWBFirmwareVersionDescriptor *_betaFirmwareVersionDescriptor;
    BOOL _retrievingVersionFile;
    NSMutableArray *subConnections;
    BOOL killOnDisconnect;
    NSString *_currentFirmwareVersionString;
    WFWBFirmwareVersionDescriptor *_currentFirmwareVersionDescriptor;
}

+ (id)sensorConnectionForSensorType:(int)arg1 subConnections:(id)arg2;
+ (id)createConnectionWithParams:(CDStruct_1fd10fe0 *)arg1;
+ (id)createSuperConnectionForType:(int)arg1;
+ (id)createBTLEConnection:(CDStruct_1fd10fe0 *)arg1;
+ (id)createANTConnection:(CDStruct_1fd10fe0 *)arg1;
@property(retain, nonatomic) id <WFSensorSubConnectionDelegate> parentDelegate; // @synthesize parentDelegate;
@property(retain) NSMutableArray *subConnections; // @synthesize subConnections;
@property(nonatomic) BOOL retrievingVersionFile; // @synthesize retrievingVersionFile=_retrievingVersionFile;
@property(retain, nonatomic) WFWBFirmwareVersionDescriptor *currentFirmwareVersionDescriptor; // @synthesize currentFirmwareVersionDescriptor=_currentFirmwareVersionDescriptor;
@property(retain, nonatomic) NSString *currentFirmwareVersionString; // @synthesize currentFirmwareVersionString=_currentFirmwareVersionString;
@property(retain, nonatomic) WFWBFirmwareVersionDescriptor *availableFirmwareVersionDescriptor; // @synthesize availableFirmwareVersionDescriptor=_availableFirmwareVersionDescriptor;
@property(retain, nonatomic) NSString *availableFirmwareVersionString; // @synthesize availableFirmwareVersionString=_availableFirmwareVersionString;
@property(retain, nonatomic) NSArray *availableFirmwareVersions; // @synthesize availableFirmwareVersions=_availableFirmwareVersions;
@property(nonatomic) BOOL killOnDisconnect;
- (id)getDeviceFirmwareRevision;
- (id)getDeviceName;
- (id)firmwareInfoForFile:(id)arg1;
- (BOOL)updateFirmwareWithPackage:(id)arg1;
- (BOOL)updateFirmware:(id)arg1;
- (BOOL)sendRebootRequest:(BOOL)arg1;
- (BOOL)sendStartNordicDFURequest;
- (BOOL)sendDisableDebugRequest;
- (BOOL)sendEnableDebugRequestWithParameter0:(unsigned int)arg1;
- (BOOL)sendEnableDebugRequest;
- (BOOL)sendSelfTestCommandWithPayloadData:(id)arg1;
- (BOOL)sendDeviceInfoRequest;
- (BOOL)sendEnableJtagRequest;
- (BOOL)sendDisableJtagRequest;
- (BOOL)sendGetBootloaderVersion;
- (BOOL)isFirmwareA;
- (id)getDeviceDirectoryNameFromDeviceName:(id)arg1;
- (void)determineFirmwareCurrentVersion:(id)arg1;
- (void)determineFirmwareAvailableVersion;
- (void)parseVersionJSONData:(id)arg1;
- (void)didGetFirmwareAvailableVersionFromServer:(id)arg1 forDeviceName:(id)arg2 withCurrentVersion:(id)arg3;
- (void)getFirmwareAvailableVersionFromServerForDevice:(id)arg1;
- (id)formatVersionString:(id)arg1;
- (void)checkAvailableFirmwareVersionWithUpdateInfo:(id)arg1;
- (void)firmwareUpdateDidReceiveStartNordicDFUResponse:(BOOL)arg1;
- (void)firmwareSelfTestInfoWasReceived:(id)arg1;
- (void)firmwareSelfTestCommandResponseWasReceivedWithSuccess:(BOOL)arg1 responseData:(id)arg2;
- (void)firmwareUpdateDidReceiveEnableJtagResponse:(BOOL)arg1 valueBefore:(unsigned long)arg2 valueAfter:(unsigned long)arg3;
- (void)firmwareUpdateDidReceiveDisableJtagResponse:(BOOL)arg1;
- (void)firmwareBootloaderVersionResponse:(char *)arg1 success:(BOOL)arg2;
- (void)firmwareUpdateTransferStarted:(int)arg1;
- (void)firmwareUpdateTransferFinished:(BOOL)arg1;
- (void)firmwareUpdatePacketSent:(int)arg1;
- (id)getBTLECommonData;
- (id)getANTCommonData;
- (void)disconnect:(BOOL)arg1;
- (void)disconnect;
- (void)delegateConnectionRejectedByDevice:(id)arg1;
- (void)disconnectSubConections;
- (void)setError:(int)arg1;
- (void)setDidTimeout:(BOOL)arg1;
- (void)setDeviceParams:(unsigned short)arg1 transType:(unsigned char)arg2;
- (void)setDeviceUUIDString:(id)arg1;
- (void)setConnectionStatus:(int)arg1;
- (void)invalidate;
- (id)initWithDelegate:(id)arg1 channel:(unsigned char)arg2;
- (id)outermostConnection;
- (BOOL)isOuttermostConntion;
- (id)getDevice;
- (void)configureBaseServiceSupport:(int)arg1;
- (void)setNetworkType:(int)arg1;
- (id)serialTransferService;
- (id)firmwareService;
- (id)btleDevice;
- (CDStruct_e7e103e4 *)pstDeviceInfo;
@property(retain, nonatomic) id <WFWBFirmwareDelegate> wbFirmwareDelegate;
@property(retain, nonatomic) id <WFDebugDelegate> debugDelegate; // @synthesize debugDelegate;
- (void)connection:(id)arg1 didReceiveStopDebugModeResponse:(BOOL)arg2;
- (void)connection:(id)arg1 didReceiveDebugModeResponse:(BOOL)arg2;
- (void)connection:(id)arg1 didReceiveDebugData:(id)arg2;
- (id)subConnectionRequestForParent;
- (void)subConnectionDidInvalidate:(id)arg1;
- (void)connection:(id)arg1 stateChanged:(int)arg2;
- (void)dealloc;
- (id)init;

@end

