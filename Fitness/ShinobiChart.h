//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "SChartRadialDataPointMapperSource.h"

@class NSArray, NSMutableArray, NSNumber, NSObject<OS_dispatch_queue>, NSString, SChartAxis, SChartCanvas, SChartCrosshair, SChartGradientView, SChartLegend, SChartMainTitleStyle, SChartStyle, SChartTheme, SChartTitle, UIColor;

@interface ShinobiChart : UIView <SChartRadialDataPointMapperSource>
{
    NSMutableArray *xAxes;
    NSMutableArray *yAxes;
    NSMutableArray *seriesGroups;
    BOOL shouldReloadData;
    NSObject<OS_dispatch_queue> *loadingDataQueue;
    int loadingQueueSize;
    BOOL rotatesOnDeviceRotation;
    BOOL autoCalculateAxisRanges;
    BOOL animateBoxGesture;
    BOOL animateZoomGesture;
    BOOL gestureDoubleTapResetsZoom;
    BOOL gestureDoubleTapEnabled;
    BOOL radialTapEnabled;
    BOOL radialRotationEnabled;
    BOOL gesturePanCancelsCrosshair;
    BOOL _loadDataInBackground;
    BOOL _pinchOrPanInProgress;
    id <SChartDatasource> datasource;
    id <SChartDelegate> delegate;
    NSArray *_series;
    SChartTitle *titleLabel;
    SChartLegend *legend;
    SChartCanvas *canvas;
    NSString *licenseKey;
    UIView *_loadingIndicator;
    SChartTheme *_theme;
    id <SChartLayoutManager> _layoutManager;
    id <SChartErrorHandler> _errorHandler;
    id <SChartAnnotationManager> _annotationManager;
    id <SChartDataPointMapper> _dataPointMapper;
    id <SChartThemeDecorator> _themeDecorator;
    SChartGradientView *_gradientView;
    SChartStyle *_innerChartStyle;
    SChartMainTitleStyle *_innerTitleStyle;
    id <SChartSetupHelper> _setupHelper;
    id <SChartAxisAdder> _axisAdder;
    struct UIEdgeInsets canvasInset;
}

+ (id)getInfo;
@property(retain, nonatomic) id <SChartAxisAdder> axisAdder; // @synthesize axisAdder=_axisAdder;
@property(retain, nonatomic) id <SChartSetupHelper> setupHelper; // @synthesize setupHelper=_setupHelper;
@property(retain, nonatomic) SChartMainTitleStyle *innerTitleStyle; // @synthesize innerTitleStyle=_innerTitleStyle;
@property(retain, nonatomic) SChartStyle *innerChartStyle; // @synthesize innerChartStyle=_innerChartStyle;
@property(retain, nonatomic) SChartGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) id <SChartThemeDecorator> themeDecorator; // @synthesize themeDecorator=_themeDecorator;
@property(retain, nonatomic) id <SChartDataPointMapper> dataPointMapper; // @synthesize dataPointMapper=_dataPointMapper;
@property(retain, nonatomic) id <SChartAnnotationManager> annotationManager; // @synthesize annotationManager=_annotationManager;
@property(retain, nonatomic) id <SChartErrorHandler> errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) id <SChartLayoutManager> layoutManager; // @synthesize layoutManager=_layoutManager;
@property(nonatomic) BOOL pinchOrPanInProgress; // @synthesize pinchOrPanInProgress=_pinchOrPanInProgress;
@property(retain, nonatomic) SChartTheme *theme; // @synthesize theme=_theme;
@property(nonatomic) BOOL loadDataInBackground; // @synthesize loadDataInBackground=_loadDataInBackground;
@property(retain, nonatomic) UIView *loadingIndicator; // @synthesize loadingIndicator=_loadingIndicator;
@property(nonatomic) BOOL gesturePanCancelsCrosshair; // @synthesize gesturePanCancelsCrosshair;
@property(retain, nonatomic) NSString *licenseKey; // @synthesize licenseKey;
@property(nonatomic) struct UIEdgeInsets canvasInset; // @synthesize canvasInset;
@property(readonly, nonatomic) SChartCanvas *canvas; // @synthesize canvas;
@property(nonatomic) BOOL radialRotationEnabled; // @synthesize radialRotationEnabled;
@property(nonatomic) BOOL radialTapEnabled; // @synthesize radialTapEnabled;
@property(nonatomic) BOOL gestureDoubleTapEnabled; // @synthesize gestureDoubleTapEnabled;
@property(nonatomic) BOOL gestureDoubleTapResetsZoom; // @synthesize gestureDoubleTapResetsZoom;
@property(nonatomic) BOOL animateZoomGesture; // @synthesize animateZoomGesture;
@property(nonatomic) BOOL animateBoxGesture; // @synthesize animateBoxGesture;
@property(retain, nonatomic) SChartTitle *titleLabel; // @synthesize titleLabel;
@property(retain) NSArray *series; // @synthesize series=_series;
@property(nonatomic) id <SChartDelegate> delegate; // @synthesize delegate;
@property(nonatomic) BOOL autoCalculateAxisRanges; // @synthesize autoCalculateAxisRanges;
@property(nonatomic) BOOL rotatesOnDeviceRotation; // @synthesize rotatesOnDeviceRotation;
- (float)glRadius;
- (struct CGPoint)getGLCenterPoint;
- (float)getGLRadius;
- (id)axisWithOrientation:(int)arg1 andSelector:(SEL)arg2 forSeries:(id)arg3 withIndex:(int)arg4;
- (void)positionChartTitle;
- (void)callDelegateIfResponds:(SEL)arg1 withObject:(id)arg2;
- (void)callDelegateIfResponds:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isOwningAxis:(id)arg1;
- (void)applyMainChartTitleStyle:(id)arg1;
- (void)applyMainChartTitleStyle:(id)arg1 preservingSetValues:(BOOL)arg2;
- (void)applyChartStyle:(id)arg1;
- (void)applyChartStyle:(id)arg1 preservingSetValues:(BOOL)arg2;
- (void)applyThemeToChartPreservingSetValues:(BOOL)arg1;
@property(retain, nonatomic) NSMutableArray *yAxes; // @dynamic yAxes;
@property(retain, nonatomic) NSMutableArray *xAxes; // @dynamic xAxes;
@property(retain, nonatomic) NSMutableArray *seriesGroups; // @dynamic seriesGroups;
@property(nonatomic) BOOL shouldReloadData; // @dynamic shouldReloadData;
- (BOOL)isMappedChart;
- (BOOL)gesturePanCancelsCrosshairDeprecated;
- (void)zoomToPoint:(struct SChartPoint)arg1 withRange:(struct SChartSize)arg2;
- (id)stringForIdX:(id)arg1 andIdY:(id)arg2 usingSeries:(id)arg3;
- (id)stringForX:(double)arg1 andY:(double)arg2;
- (id)stringForX:(double)arg1 andY:(double)arg2 usingSeries:(id)arg3;
- (id)stringForX:(double)arg1 andY:(double)arg2 usingXAxis:(id)arg3 andYAxis:(id)arg4;
- (BOOL)pointIsVisible:(struct SChartPoint)arg1 onSeries:(id)arg2;
- (void)removeAllAnnotations;
- (void)removeAnnotation:(id)arg1;
- (id)getAnnotations;
- (void)replaceAnnotationAtIndex:(int)arg1 withAnnotation:(id)arg2;
- (void)addAnnotation:(id)arg1;
- (void)addAnnotationToView:(id)arg1;
@property(retain, nonatomic) SChartCrosshair *crosshair; // @dynamic crosshair;
@property(nonatomic) BOOL overlapChartTitle; // @dynamic overlapChartTitle;
@property(nonatomic) int titlePosition; // @dynamic titlePosition;
@property(nonatomic) int titleCentresOn; // @dynamic titleCentresOn;
@property(retain, nonatomic) UIColor *borderColor; // @dynamic borderColor;
@property(retain, nonatomic) NSNumber *borderThickness; // @dynamic borderThickness;
@property(nonatomic) float plotAreaBorderThickness; // @dynamic plotAreaBorderThickness;
@property(retain, nonatomic) UIColor *plotAreaBorderColor; // @dynamic plotAreaBorderColor;
@property(retain, nonatomic) UIColor *plotAreaBackgroundColor; // @dynamic plotAreaBackgroundColor;
- (void)setBackgroundColor:(id)arg1;
@property(nonatomic) UIColor *canvasAreaBackgroundColor; // @dynamic canvasAreaBackgroundColor;
- (id)backgroundColor;
- (void)removeGradientView;
- (void)updateRangesOnAxis:(id)arg1;
- (void)layoutSubviews;
- (void)applySetupHelperFromFirstSeries:(id)arg1;
- (void)setupUsingHelper:(id)arg1;
- (void)resizeCanvasAndRepositionLegend;
- (int)loadingQueueSize;
- (void)decrementQueueSize;
- (void)incrementQueueSize;
- (void)stopLoadingIndicator;
- (void)startLoadingIndicator;
- (void)updateChartWithNewChartSeries:(id)arg1 newSeriesGroups:(id)arg2;
- (id)axisOnChartMatchingStubbedCopy:(id)arg1 axesOnChart:(id)arg2 seriesIndex:(int)arg3;
- (id)groupAndMapSeries:(id)arg1;
- (id)putSeriesIntoGroups:(id)arg1;
- (void)redrawChartOnMainThread;
- (void)redrawChart;
- (void)redrawChartIncludePlotArea:(BOOL)arg1;
- (void)redrawChartIncludePlotArea:(BOOL)arg1 recalcTickLabels:(BOOL)arg2;
- (void)redrawChartAndGL:(BOOL)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)getInfo;
- (void)positionLegend;
@property(retain, nonatomic) SChartLegend *legend; // @synthesize legend;
@property(retain, nonatomic) NSString *title; // @dynamic title;
- (void)applyTheme:(id)arg1;
- (id)getTheme;
- (void)applyTheme;
- (void)axisPanningChanged;
- (void)axesForSeries:(id)arg1 storeX:(id *)arg2 andStoreY:(id *)arg3;
- (void)replaceYAxis:(id)arg1 withAxis:(id)arg2;
- (void)replaceXAxis:(id)arg1 withAxis:(id)arg2;
- (void)replaceAxis:(id)arg1 withAxis:(id)arg2 inArray:(id)arg3;
- (void)removeYAxis:(id)arg1;
- (void)removeXAxis:(id)arg1;
@property(retain, nonatomic) SChartAxis *yAxis; // @dynamic yAxis;
@property(retain, nonatomic) SChartAxis *xAxis; // @dynamic xAxis;
- (id)primaryYAxis;
- (id)primaryXAxis;
- (id)firstAxisIn:(id)arg1;
- (void)addYAxis:(id)arg1;
- (void)addXAxis:(id)arg1;
- (id)secondaryYAxes;
- (id)secondaryXAxes;
- (id)secondaryAxes;
- (id)primaryAxes;
- (id)allYAxes;
- (id)allXAxes;
- (id)allAxes;
- (void)setupChartForAxis:(id)arg1;
- (void)styleAxis:(id)arg1 withStyle:(id)arg2 preserveValue:(BOOL)arg3;
- (void)setupAxis:(id)arg1 withStyle:(id)arg2 orientation:(int)arg3;
- (void)addEntry:(id)arg1 toGroups:(id)arg2;
- (id)description;
- (id)createAxisFromDataPoint:(id)arg1 withOrientation:(int)arg2;
- (id)loadNewChartSeriesEntries;
- (void)testAxisIsValid:(id)arg1 orientation:(int)arg2;
- (void)setNeedsLayoutIfHaveAxesAndData;
- (struct CGRect)getPlotAreaFrame;
- (struct CGRect)getGLFrame;
- (id)getCanvas;
- (id)getChart;
- (id)chartBackgroundColor;
- (id)plotBackgroundColor;
- (struct CGRect)chartFrame;
@property(readonly) NSMutableArray *chartSeries; // @dynamic chartSeries;
- (id)allChartSeries;
@property(nonatomic) int gesturePanType;
@property(nonatomic) BOOL gesturePinchAspectLock;
- (void)resetChartSeries;
- (void)updateCanvasSize;
- (void)removeNumberOfDataPoints:(int)arg1 fromStartOfSeriesAtIndex:(int)arg2;
- (void)appendNumberOfDataPoints:(int)arg1 toEndOfSeriesAtIndex:(int)arg2;
- (void)reloadData;
@property(nonatomic) id <SChartDatasource> datasource; // @synthesize datasource;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1 withPrimaryXAxisType:(int)arg2 withPrimaryYAxisType:(int)arg3;
- (id)initWithFrame:(struct CGRect)arg1 withTheme:(id)arg2 withPrimaryXAxisType:(int)arg3 withPrimaryYAxisType:(int)arg4;
- (id)initWithFrame:(struct CGRect)arg1 withTheme:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 errorHandler:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)initialiseChartUsingThemeOrDefault:(id)arg1 errorHandler:(id)arg2;

@end

