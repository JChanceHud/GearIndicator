//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "SChartLayer.h"

@class SChartBoxGestureRecogniser, SChartCanvas, SChartCrosshair, SChartDonutSeries, SChartPinchPanGestureRecogniser, ShinobiChart, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer;

@interface SChartCanvasOverlay : UIView <SChartLayer>
{
    SChartCanvas *canvas;
    SChartCrosshair *crosshair;
    SChartPinchPanGestureRecogniser *pinchAndPanGesture;
    SChartBoxGestureRecogniser *boxGesture;
    UITapGestureRecognizer *doubleTapGesture;
    UITapGestureRecognizer *singleTapGesture;
    UITapGestureRecognizer *radialTapGesture;
    UILongPressGestureRecognizer *longPressGesture;
    UIPanGestureRecognizer *radialRotationGesture;
    BOOL atLeastOneAxisNeedsPanning;
    BOOL zoomStartedThisGesture;
    struct CGPoint lastPanPoint;
    struct CGPoint prevScale;
    struct CGPoint prevZoomFactor;
    struct CGRect lastZoomBox;
    UIView *zoomBoxView;
    UIView *zoomBoxLine1;
    UIView *zoomBoxLine2;
    UIView *zoomBoxLine3;
    UIView *zoomBoxLine4;
    struct CGPoint _rotationInitialPoint;
    struct CGPoint _rotationLastPoint;
    SChartDonutSeries *_rotationTrackingSeries;
    float _rotationOriginalAngle;
    int _rotationSpinDirection;
    int _rotationChanges;
    ShinobiChart *chart;
    int gesturePanType;
}

@property(nonatomic) int gesturePanType; // @synthesize gesturePanType;
@property(nonatomic) ShinobiChart *chart; // @synthesize chart;
- (void)dealloc;
- (void)axisFinishedMomentumPanning:(id)arg1;
- (void)axisFinishedMomentumZooming:(id)arg1;
- (void)handleRadialRotationGesture:(id)arg1;
- (void)handleRadialTapGesture:(id)arg1;
- (id)seriesFromRadialPoint:(struct CGPoint)arg1;
- (void)radialPoint:(struct CGPoint)arg1 toSlice:(id *)arg2 sliceIndex:(int *)arg3;
- (struct CGPoint)donutCentre;
- (void)handleLongPressGesture:(id)arg1;
- (void)handleDoubleTapGesture:(id)arg1;
- (void)handleSingleTapGesture:(id)arg1;
- (void)axisIsPanning:(id)arg1;
- (void)axisIsZooming:(id)arg1;
- (void)handlePinchAndPanGesture:(id)arg1;
- (BOOL)endZoomFromGesture:(id)arg1;
- (BOOL)endPanFromGesture:(id)arg1;
- (void)processGestureStateChanged:(id)arg1;
- (void)handleBoxGesture:(id)arg1;
- (void)zoomAxes:(id)arg1 inZoomBox:(struct CGRect)arg2 withAnimation:(BOOL)arg3;
- (void)cancelMomentumGestures;
- (void)createGestureRecognizers;
- (void)enableAppropriateGestureRecognisers;
- (void)updateZoomBox;
- (void)addZoomBox;
- (void)removeZoomBox;
- (void)hideZoomBox;
@property(nonatomic) BOOL gesturePinchAspectLock;
- (void)enablePanning:(BOOL)arg1;
- (id)activePanGestureRecognizer;
- (void)viewEndRotateWithDuration:(id)arg1;
- (void)viewStartRotateWithDuration:(id)arg1;
- (void)positionCrosshairIfVisible;
- (void)positionCrosshairFromGesture:(id)arg1 gestureJustStarted:(BOOL)arg2;
- (void)positionCrosshairAtPosition:(struct SChartPoint)arg1 onSeries:(id)arg2 onDatapoint:(id)arg3;
- (struct SChartSeriesDistanceInfo)closestSeriesToPixelPoint:(struct CGPoint)arg1 seriesConstraints:(int)arg2;
- (struct SChartSeriesDistanceInfo)distanceInfoForSeries:(id)arg1 toPixelPoint:(struct CGPoint)arg2 isOnlySeries:(BOOL)arg3;
@property(retain, nonatomic) SChartCrosshair *crosshair; // @dynamic crosshair;
- (id)initWithFrame:(struct CGRect)arg1 usingChart:(id)arg2 andCanvas:(id)arg3;
- (void)setDefaults;

@end

