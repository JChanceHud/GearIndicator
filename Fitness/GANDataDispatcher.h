//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GANHTTPResponseParserDelegate.h"
#import "GANTCPSocketDelegate.h"

@class GANHTTPResponseParser, GANTCPSocket, NSMutableArray, NSMutableString, NSString;

@interface GANDataDispatcher : NSObject <GANHTTPResponseParserDelegate, GANTCPSocketDelegate>
{
    id <GANDataDispatcherDelegate> delegate_;
    GANTCPSocket *socket_;
    NSString *destinationHost_;
    unsigned int destinationPort_;
    NSString *destinationPathPrefix_;
    BOOL pipelineMode_;
    NSMutableArray *pendingHits_;
    NSMutableString *pendingRequest_;
    unsigned int hitsDispatched_;
    GANHTTPResponseParser *responseParser_;
    Class socketClass_;
    NSString *userAgent_;
    unsigned int sequentialRequests_;
    int lastStatusCode_;
    double retryInterval_;
    BOOL dryRun_;
    BOOL sendingSynchronously_;
}

@property(nonatomic) Class socketClass; // @synthesize socketClass=socketClass_;
@property(retain, nonatomic) GANHTTPResponseParser *responseParser; // @synthesize responseParser=responseParser_;
@property(retain, nonatomic) NSMutableString *pendingRequest; // @synthesize pendingRequest=pendingRequest_;
@property(retain, nonatomic) NSMutableArray *pendingHits; // @synthesize pendingHits=pendingHits_;
@property(retain, nonatomic) GANTCPSocket *socket; // @synthesize socket=socket_;
@property(nonatomic) id <GANDataDispatcherDelegate> delegate; // @synthesize delegate=delegate_;
@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=userAgent_;
@property(copy, nonatomic) NSString *destinationPathPrefix; // @synthesize destinationPathPrefix=destinationPathPrefix_;
@property(nonatomic) unsigned int destinationPort; // @synthesize destinationPort=destinationPort_;
@property(copy, nonatomic) NSString *destinationHost; // @synthesize destinationHost=destinationHost_;
@property(nonatomic) BOOL dryRun; // @synthesize dryRun=dryRun_;
@property(nonatomic) BOOL pipelineMode; // @synthesize pipelineMode=pipelineMode_;
- (void)parseError:(id)arg1 statusCode:(int)arg2;
- (void)responseParsed:(id)arg1 persistentConnection:(BOOL)arg2;
- (void)socketBecameReadable:(id)arg1;
- (void)socketConnectDidFail:(id)arg1 withError:(id)arg2;
- (void)socketConnectDidSucceed:(id)arg1;
- (void)injectSocketClass:(Class)arg1;
- (void)sendData;
- (void)closeConnection;
- (void)finishDispatch;
- (void)cancelDispatch;
- (id)constructRequestFromHit:(id)arg1;
- (void)constructRequest;
- (void)dispatchPendingHits;
- (BOOL)dispatchHitsSynchronously:(id)arg1 withTimeout:(double)arg2;
- (void)dispatchHits:(id)arg1;
- (void)reportHitDispatched;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 withProduct:(id)arg2 withVersion:(id)arg3;

@end

