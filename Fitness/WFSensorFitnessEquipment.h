//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WFSensor.h"

@class WFCadenceCalculatorWorkout, WFFitnessEquipmentConnection, WFFitnessEquipmentData, WFHeartrateCalculatorWorkout, WFPowerCalculatorWorkout, WFSpeedCalculatorWorkout;

@interface WFSensorFitnessEquipment : WFSensor
{
    struct {
        long long i64DistanceOffset;
        float fpTreadmillPosVertDistOffset;
        float fpTreadmillNegVertDistOffset;
        double bikeTimeOffset;
        float fpAccumTorqueOffset;
        long long crankRevOffset;
        unsigned int heartbeatOffset;
    } dataOffsets;
    int prevFEState;
    BOOL heartrateCalcEnabled;
    BOOL powerCalcEnabled;
    WFHeartrateCalculatorWorkout *heartrateCalc;
    WFSpeedCalculatorWorkout *speedCalculator;
    WFCadenceCalculatorWorkout *cadenceCalculator;
    WFPowerCalculatorWorkout *powerCalculator;
    WFFitnessEquipmentData *lastFEData;
}

@property(retain, nonatomic) WFFitnessEquipmentData *lastFEData; // @synthesize lastFEData;
@property(readonly, nonatomic) WFPowerCalculatorWorkout *powerCalculator; // @synthesize powerCalculator;
@property(nonatomic) BOOL powerCalcEnabled; // @synthesize powerCalcEnabled;
@property(readonly, nonatomic) WFCadenceCalculatorWorkout *cadenceCalculator; // @synthesize cadenceCalculator;
@property(readonly, nonatomic) WFSpeedCalculatorWorkout *speedCalculator; // @synthesize speedCalculator;
@property(readonly, nonatomic) WFHeartrateCalculatorWorkout *heartrateCalc; // @synthesize heartrateCalc;
@property(nonatomic) BOOL heartrateCalcEnabled; // @synthesize heartrateCalcEnabled;
- (void).cxx_destruct;
- (id)stringFromHeartrate:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedHeartrate:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikePower20MinuteMeanMaxWorkoutRange;
- (id)stringFromBikePower1HourMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower20MinuteMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower10MinuteMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower5MinuteMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower1MinuteMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower30SecondMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower20SecondMeanMaxForDuration:(int)arg1;
- (id)stringFromBikePower5SecondMeanMaxForDuration:(int)arg1;
- (id)detailedMeticsForDuration:(int)arg1;
- (id)stringFromBikePowerMeanMax:(id)arg1;
- (int)powerFromAccumulatedTorque:(double)arg1 forTimeInterval:(double)arg2;
- (id)stringFromBikePowerCaloriesPrevLap:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikePowerCaloriesLap:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikePowerCalories:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeAccumTorque;
- (id)stringFromBikePowerMaxPrevLap;
- (id)stringFromBikePowerMaxLap;
- (id)stringFromBikePowerMax;
- (id)stringFromBikePowerAveragePrevLap;
- (id)stringFromBikePowerAverageLap;
- (id)stringFromBikePowerAverage;
- (id)stringFromBikePower;
- (id)stringFromCadence:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3 displayCell:(id)arg4;
- (id)formattedCadence:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3;
- (id)stringFromFitnessEquipmentCadence:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedFitnessEquipmentCadence:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromBikeCadence:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedBikeCadence:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromTreadmillStrideRateInstant:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedTreadmillStrideRateInstant:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromFitnessEquipmentCalories:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedFitnessEquipmentCalories:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromFitnessEquipmentPaceLastMileAverage:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromFitnessEquipmentPace1MileMeanMinimal:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromFitnessEquipmentPaceAverage:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2 displayCell:(id)arg3;
- (id)formattedFitnessEquipmentPaceAverage:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2;
- (id)stringFromFitnessEquipmentPaceInstant:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedFitnessEquipmentPaceInstant:(CDStruct_e25eb2d1 *)arg1;
- (id)stringFromFitnessEquipmentDistance:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2 displayCell:(id)arg3;
- (id)formattedFitnessEquipmentDistance:(CDStruct_e25eb2d1 *)arg1 forDuration:(int)arg2;
- (id)stringFromSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3 displayCell:(id)arg4;
- (id)formattedSpeed:(CDStruct_e25eb2d1 *)arg1 averagingType:(int)arg2 forDuration:(int)arg3;
- (id)stringFromSpeed:(CDStruct_e25eb2d1 *)arg1 displayCell:(id)arg2;
- (id)formattedSpeed:(CDStruct_e25eb2d1 *)arg1;
@property(readonly, nonatomic) WFFitnessEquipmentData *fitnessEquipmentData;
@property(readonly, nonatomic) WFFitnessEquipmentConnection *fitnessEquipmentConnection;
- (void)writeSummaryForWorkout:(id)arg1;
- (void)writeSummaryForSegment:(id)arg1;
- (BOOL)resetOffsets;
- (void)resumeWorkout;
- (void)pauseWorkout;
- (void)processData:(id)arg1;
- (void)processData:(id)arg1 forBikeData:(id)arg2;
- (BOOL)processStateChanges:(id)arg1;
- (void)endWorkout:(id)arg1;
- (void)endSegment:(id)arg1;
- (BOOL)beginWorkout:(id)arg1;
- (void)beginSegment;
- (id)init;

@end

