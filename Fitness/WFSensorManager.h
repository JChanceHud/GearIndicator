//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "WFDiscoveryManagerDelegate.h"
#import "WFFitnessEquipmentClientDelegate.h"
#import "WFHardwareConnectorDelegate.h"
#import "WFSensorDelegate.h"
#import "WFSensorGPSDelegate.h"

@class NMListeningSet<WFSensorManagerListenerProtocol>, NSMutableArray, NSMutableSet, WFDiscoveryManager, WFFitnessEquipmentClient, WFSensorAccelerometer, WFSensorAudioControl, WFSensorBikeCadence, WFSensorBikePower, WFSensorBikeSpeed, WFSensorDisplay, WFSensorFitnessEquipment, WFSensorFootpod, WFSensorGPS, WFSensorHeartrate, WFSensorMultiSport, WFSensorSpeedCadence, WFSensorWeightScale, WFSession, WFUberSensorDebugDataLogger;

@interface WFSensorManager : NSObject <WFDiscoveryManagerDelegate, WFHardwareConnectorDelegate, WFSensorGPSDelegate, WFSensorDelegate, WFFitnessEquipmentClientDelegate>
{
    BOOL _discoveryModeEnabled;
    BOOL _antConnected;
    BOOL _btleConnected;
    WFSession *_session;
    WFSensorHeartrate *_wfSensorHeartrate;
    WFSensorFootpod *_wfSensorFootpod;
    WFSensorBikePower *_wfSensorBikePower;
    WFSensorBikeCadence *_wfSensorBikeCadence;
    WFSensorBikeSpeed *_wfSensorBikeSpeed;
    WFSensorSpeedCadence *_wfSensorSpeedCadence;
    WFSensorWeightScale *_wfSensorWeightScale;
    WFSensorFitnessEquipment *_wfSensorFitnessEquipment;
    WFSensorAudioControl *_wfSensorAudioControl;
    WFSensorMultiSport *_wfSensorMultiSport;
    WFSensorGPS *_wfSensorGPS;
    WFSensorAccelerometer *_wfSensorAccelerometer;
    WFSensorDisplay *_wfSensorDisplay;
    WFFitnessEquipmentClient *_feClient;
    NMListeningSet<WFSensorManagerListenerProtocol> *_listeners;
    NSMutableArray *_discoveredDevices;
    WFUberSensorDebugDataLogger *_sensorDebugDataLogger;
    int _previousHardwareConnectorState;
    WFDiscoveryManager *_btleDiscoveryManager;
    WFDiscoveryManager *_antDiscoveryManager;
    NSMutableSet *_allWFSensors;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSMutableSet *allWFSensors; // @synthesize allWFSensors=_allWFSensors;
@property(retain, nonatomic) WFDiscoveryManager *antDiscoveryManager; // @synthesize antDiscoveryManager=_antDiscoveryManager;
@property(retain, nonatomic) WFDiscoveryManager *btleDiscoveryManager; // @synthesize btleDiscoveryManager=_btleDiscoveryManager;
@property(nonatomic) int previousHardwareConnectorState; // @synthesize previousHardwareConnectorState=_previousHardwareConnectorState;
@property(retain, nonatomic) WFUberSensorDebugDataLogger *sensorDebugDataLogger; // @synthesize sensorDebugDataLogger=_sensorDebugDataLogger;
@property(readonly, nonatomic) BOOL btleConnected; // @synthesize btleConnected=_btleConnected;
@property(readonly, nonatomic) BOOL antConnected; // @synthesize antConnected=_antConnected;
@property(nonatomic) BOOL discoveryModeEnabled; // @synthesize discoveryModeEnabled=_discoveryModeEnabled;
@property(retain, nonatomic) NSMutableArray *discoveredDevices; // @synthesize discoveredDevices=_discoveredDevices;
@property(retain, nonatomic) NMListeningSet<WFSensorManagerListenerProtocol> *listeners; // @synthesize listeners=_listeners;
@property(retain, nonatomic) WFFitnessEquipmentClient *feClient; // @synthesize feClient=_feClient;
@property(retain, nonatomic) WFSensorDisplay *wfSensorDisplay; // @synthesize wfSensorDisplay=_wfSensorDisplay;
@property(retain, nonatomic) WFSensorAccelerometer *wfSensorAccelerometer; // @synthesize wfSensorAccelerometer=_wfSensorAccelerometer;
@property(retain, nonatomic) WFSensorGPS *wfSensorGPS; // @synthesize wfSensorGPS=_wfSensorGPS;
@property(retain, nonatomic) WFSensorMultiSport *wfSensorMultiSport; // @synthesize wfSensorMultiSport=_wfSensorMultiSport;
@property(retain, nonatomic) WFSensorAudioControl *wfSensorAudioControl; // @synthesize wfSensorAudioControl=_wfSensorAudioControl;
@property(retain, nonatomic) WFSensorFitnessEquipment *wfSensorFitnessEquipment; // @synthesize wfSensorFitnessEquipment=_wfSensorFitnessEquipment;
@property(retain, nonatomic) WFSensorWeightScale *wfSensorWeightScale; // @synthesize wfSensorWeightScale=_wfSensorWeightScale;
@property(retain, nonatomic) WFSensorSpeedCadence *wfSensorSpeedCadence; // @synthesize wfSensorSpeedCadence=_wfSensorSpeedCadence;
@property(retain, nonatomic) WFSensorBikeSpeed *wfSensorBikeSpeed; // @synthesize wfSensorBikeSpeed=_wfSensorBikeSpeed;
@property(retain, nonatomic) WFSensorBikeCadence *wfSensorBikeCadence; // @synthesize wfSensorBikeCadence=_wfSensorBikeCadence;
@property(retain, nonatomic) WFSensorBikePower *wfSensorBikePower; // @synthesize wfSensorBikePower=_wfSensorBikePower;
@property(retain, nonatomic) WFSensorFootpod *wfSensorFootpod; // @synthesize wfSensorFootpod=_wfSensorFootpod;
@property(retain, nonatomic) WFSensorHeartrate *wfSensorHeartrate; // @synthesize wfSensorHeartrate=_wfSensorHeartrate;
@property(retain, nonatomic) WFSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (void)setupSensorDebugDataLogger;
- (void)discoveryManager:(id)arg1 didLooseDevice:(id)arg2;
- (void)discoveryManager:(id)arg1 didDiscoverDevice:(id)arg2;
- (void)removeDiscoveredDevicesForNetworkType:(int)arg1;
- (id)discoveryMangerForNetwork:(int)arg1;
- (id)deviceInfoForDeviceWithUUID:(id)arg1;
- (void)stopDeviceDiscoveryForNetworkType:(int)arg1;
- (void)startDeviceDiscoveryForNetworkType:(int)arg1;
- (void)writeSummaryForWorkout:(id)arg1;
- (void)writeSummaryForSegment:(id)arg1;
- (void)resumeWorkout;
- (void)pauseWorkout;
- (void)endWorkout:(id)arg1;
- (void)endSegment:(id)arg1;
- (void)beginWorkout:(id)arg1 forSession:(id)arg2;
- (void)beginSegment;
- (BOOL)isSensorConnectedWithType:(int)arg1 subType:(int)arg2;
- (int)sensorStatusForType:(int)arg1;
- (id)sensorInstanceForType:(int)arg1;
- (id)sensorInstanceForType:(int)arg1 forUBERSensor:(id)arg2;
- (id)sensorInstancesForUBERSensor:(id)arg1;
- (void)resetConnections;
- (void)processFEData;
- (void)processData:(id)arg1;
- (void)enumerateWFSensorsUsingBlock:(CDUnknownBlockType)arg1;
- (void)disconnectSensorsOfType:(int)arg1;
- (void)disconnectSensorsOnNetwork:(int)arg1;
- (void)disconnectAllSensors:(BOOL)arg1;
- (void)disconnectAllSensors;
- (void)fitnessEquipmentClientDidStart:(id)arg1;
- (void)connectSensorsForWorkoutProfile:(id)arg1 onNetworks:(int)arg2;
- (void)connectSensorsForWorkoutProfile:(id)arg1;
- (void)connectSensor:(id)arg1;
- (unsigned long)connectedSensors;
- (void)sensor:(id)arg1 rejectedByDeviceNamed:(id)arg2 appAlreadyConnected:(id)arg3;
- (void)sensor:(id)arg1 didConnect:(BOOL)arg2;
- (void)gpsSensor:(id)arg1 didUpdateLocation:(id)arg2;
- (void)gpsSensor:(id)arg1 locationDidFailWithError:(id)arg2;
- (void)hardwareConnector:(id)arg1 hasFirmwareUpdateAvailableForConnection:(id)arg2 required:(BOOL)arg3 withWahooUtilityAppURL:(id)arg4;
- (void)hardwareConnector:(id)arg1 stateChanged:(int)arg2;
- (void)hardwareConnectorHasData;
- (void)hardwareConnector:(id)arg1 disconnectedSensor:(id)arg2;
- (void)hardwareConnector:(id)arg1 connectedSensor:(id)arg2;
- (void)dealloc;
- (BOOL)hasTICKRRun;

@end

